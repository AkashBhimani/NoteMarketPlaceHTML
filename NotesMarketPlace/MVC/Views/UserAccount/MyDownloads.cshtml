@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.DownloadedNotes>
@{
    ViewBag.Title = "My Download";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="buyer-request my-notes-status">

    <div class="container section-container">

        <div class="row">

            <div class="col-md-7 col-sm-6 col-xs-12">
                <div class="dash-heading-left">
                    <h4>My Downloads</h4>
                </div>
            </div>

            @if (ViewBag.Message != null)
            {
                <div class="col-md-12">
                    <h4>@ViewBag.Message</h4>
                </div>
            }
            else
            {

                using (Html.BeginForm("MyDownloads", "UserAccount", FormMethod.Get))
                {
                    <div class="col-md-3 col-sm-4 col-xs-8">
                        <div class="form-group dash-heading-right">
                            <img src="~/Content/Images/Dashboard/search.jpg">
                            <input type="search" name="search" value="" placeholder="Search" class="form-control">
                        </div>
                    </div>

                    <div class="col-md-2 col-sm-2 col-xs-4 search-btn">
                        <button type="submit" class="btn submit" style="width: 100%;">SEARCH</button>
                    </div>
                }

                <div class="col-md-12">

                    <div class="general-table table-responsive mydownload">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        @Html.DisplayNameFor(x => x.First().ID)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("NOTE TITLE", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortByNoteTitle, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("CATEGORY", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortByCategory, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("BUYER", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortByBuyer, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("SELL TYPE", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortByIsPaid, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("PRICE", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortBySellprice, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("DOWNLOADED DATE/TIME", "MyDownloads", "UserAccount", new { sortBy = ViewBag.SortByDate, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col"></th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model == null)
                                {
                                    <tr>
                                        <td colspan="10">No records Found.</td>
                                    </tr>
                                }
                                else
                                {

                                    int count = 1;
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td scope="row">@count</td>
                                            <td><a href="@Url.Action("NoteDetails","SearchNotes",new { id = item.NoteID })">@item.NoteTitle</a></td>
                                            <td>@item.Category</td>
                                            <td>@item.Users.EmailID</td>
                                            @{var isPaid = (item.IsPaid == true ? "Paid" : "Free");}
                                            <td>@isPaid</td>
                                            <td>@item.Price</td>
                                            <td>@item.AttachmentDownloadedDate</td>
                                            <td><a href="@Url.Action("NoteDetails","SearchNotes",new { id = item.NoteID })"><img src="~/Content/Images/Dashboard/eye.png"></a></td>
                                            <td>
                                                <div class="dropdown">
                                                    <i onclick="showhideDropdown(@count)" class="fa fa-ellipsis-v dropbtn" id="ellipsis"></i>
                                                    <div id="showhideDropdown_@count" class="dropdown-content">
                                                        <a href="@Url.Action("DownloadNote","UserAccount",new { id = item.NoteID})">Download Note</a>
                                                        <a onclick="openReviewModal(this)" data-id="@item.ID">Add Reviews/Feedback</a>
                                                        <a onclick="openInappropriateModal(this)" data-id="@item.ID" data-title="@item.NoteTitle">Report as inappropriate</a>
                                                    </div>
                                                </div>
                                            </td>
                                            @{ count++; }
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>

                    </div>

                    <div class="justify-content-center">
                        @if (Model != null)
                        {
                            @Html.PagedListPager(Model, page => Url.Action("MyDownloads", "UserAccount", new { page, search = Request["search"], sortBy = Request["sortBy"] }))
                        }
                    </div>

                </div>
            }
        </div>
    </div>

</div>

<!-- Model -->
<div class="modal fade" id="add-review" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <input id="note-id" type="hidden" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                <h3>Add Review</h3>
                <div class="rate form-group">
                    <input type="radio" id="star5" name="rate" data-value="5" />
                    <label for="star5" title="text">5 stars</label>
                    <input type="radio" id="star4" name="rate" data-value="4" />
                    <label for="star4" title="text">4 stars</label>
                    <input type="radio" id="star3" name="rate" data-value="3" />
                    <label for="star3" title="text">3 stars</label>
                    <input type="radio" id="star2" name="rate" data-value="2" />
                    <label for="star2" title="text">2 stars</label>
                    <input type="radio" id="star1" name="rate" data-value="1" />
                    <label for="star1" title="text">1 star</label>
                </div>
                <div class="form-group comment">
                    <label class="comment">Comment *</label>
                    <textarea class="form-control" id="comment" name="comment" placeholder="Comments..." rows="4"></textarea>
                </div>
                <button type="submit" class="btn btn-default" onclick="AddReview()" data-dismiss="modal">SUBMIT</button>
            </div>

        </div>

    </div>

</div>

<!-- Model -->
<div class="modal fade" id="mark-inappropriate" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <input id="note-id" type="hidden" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
            </div>

            <div class="modal-body">
                <h3 id="note-title"></h3>
                <div class="form-group comment">
                    <label class="comment">Remarks *</label>
                    <textarea class="form-control" id="remarks" name="comment" placeholder="Remarks..." rows="4"></textarea>
                </div>
                <button type="submit" class="btn btn-default" onclick="MarkAsInappropriate()" data-dismiss="modal">SUBMIT</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">CANCEL</button>
            </div>

        </div>

    </div>

</div>



<script>

    function openReviewModal(element) {
        var id = element.getAttribute('data-id');
        $('#add-review').modal('show');
        $('#note-id').val(id);
    }

    function AddReview() {

        const rate = $('.rate input[name="rate"]:checked').data('value');
        const comment = $('#comment').val();
        const id = $('#note-id').val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("NoteReview", "UserAccount")',
            dataType: "html",
            data: {
                id: id,
                rate: rate,
                comment: comment
            }
        });
    }

    function openInappropriateModal(element) {
        var id = element.getAttribute('data-id');
        var title = element.getAttribute('data-title');
        $('#mark-inappropriate').modal('show');
        $('#note-id').val(id);
        $('#note-title').text(title);
    }

    function MarkAsInappropriate() {

        const remarks = $('#remarks').val();
        const id = $('#note-id').val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("MarksAsInAppropriate", "UserAccount")',
            dataType: "html",
            data: {
                id: id,
                remarks: remarks
            }
        });
    }

</script>


