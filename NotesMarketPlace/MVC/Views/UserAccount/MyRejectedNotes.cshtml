@using PagedList;
@using PagedList.Mvc;

@model IPagedList<NotesMarketPlace.NoteDetails>
@{
    ViewBag.Title = "My Rejected Notes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="buyer-request my-notes-status">

    <div class="container section-container">

        <div class="row">

            <div class="col-md-7 col-sm-6 col-xs-12">
                <div class="dash-heading-left">
                    <h4>My Rejected Notes</h4>
                </div>
            </div>

            @if (ViewBag.Message != null)
            {
                <div class="col-md-12">
                    <h4>@ViewBag.Message</h4>
                </div>
            }
            else
            {

                using (Html.BeginForm("MyRejectedNotes", "UserAccount", FormMethod.Get))
                {
                    <div class="col-md-3 col-sm-4 col-xs-8">
                        <div class="form-group dash-heading-right">
                            <img src="~/Content/Images/Dashboard/search.jpg">
                            <input type="search" name="search" value="" placeholder="Search" class="form-control">
                        </div>
                    </div>

                    <div class="col-md-2 col-sm-2 col-xs-4 search-btn">
                        <button type="submit" class="btn submit" style="width: 100%;">SEARCH</button>
                    </div>
                }

                <div class="col-md-12">

                    <div class="general-table table-responsive myrejectednotes">

                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        @Html.DisplayNameFor(x => x.First().ID)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("NOTE TITLE", "MyRejectedNotes", "UserAccount", new { sortBy = ViewBag.SortByNoteTitle, search = Request["search"] }, null)
                                    </th>
                                    <th scope="col">
                                        @Html.ActionLink("CATEGORY", "MyRejectedNotes", "UserAccount", new { sortBy = ViewBag.SortByCategory, search = Request["search"] }, null)
                                    </th>                                    
                                    <th scope="col">
                                        REMARKS
                                    </th>
                                    <th scope="col">
                                        CLONE
                                    </th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model == null)
                                {
                                    <tr>
                                        <td colspan="10">No records Found.</td>
                                    </tr>
                                }
                                else
                                {

                                    int count = 1;
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td scope="row">@count</td>
                                            <td><a href="@Url.Action("NoteDetails","SearchNotes",new { id = item.ID })">@item.NoteTitle</a></td>
                                            <td>@item.NoteCategories.CategoryName</td>
                                            <td>Lorem Ipsum is simply dummy text.</td>
                                            <td>Clone</td>
                                            <td>
                                                <div class="dropdown">
                                                    <i onclick="showhideDropdown(@count)" class="fa fa-ellipsis-v dropbtn" id="ellipsis"></i>
                                                    <div id="showhideDropdown_@count" class="dropdown-content">
                                                        <a href="@Url.Action("DownloadRejectedNote","UserAccount",new { id = item.ID, notetitle = item.NoteTitle })">Download note</a>
                                                    </div>
                                                </div>
                                            </td>
                                            @{ count++; }
                                        </tr>
                                    }
                                }
                            </tbody>

                        </table>

                    </div>

                    <div class="justify-content-center">
                        @if (Model != null)
                        {
                            @Html.PagedListPager(Model, page => Url.Action("MyRejectedNotes", "UserAccount", new { page, search = Request["search"], sortBy = Request["sortBy"] }))
                        }
                    </div>

                </div>
            }
        </div>
    </div>

</div>